set nocompatible " required
filetype off " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'
Bundle 'ervandew/supertab'
" Bundle 'Valloric/YouCompleteMe'
Bundle 'SirVer/ultisnips'
Plugin 'vim-syntastic/syntastic'
Plugin 'mattn/emmet-vim'
Plugin 'nvie/vim-flake8'
Plugin 'tpope/vim-fugitive'
Plugin 'rykka/riv.vim'
" Plugin 'honza/vim-snippets'


call vundle#end()            " required
filetype plugin indent on " required
syntax on                                                                               
set t_Co=256                                                                            
set t_ut=                                                                               
let g:solarized_termcolors=256                                                          
colorscheme morning                                                                     
let mapleader = ',' " map the leader
imap ii <Esc> 
au BufNewFile,BufRead *.py
    \ set tabstop=4 | 
    \ set softtabstop=4 | 
    \ set shiftwidth=4 | 
    \ set textwidth=79 | 
    \ set expandtab | 
    \ set autoindent | 
    \ set fileformat=unix | 
au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2 | 
    \ set softtabstop=2 | 
    \ set shiftwidth=2 | 
" Enable folding
set foldmethod=indent
set foldlevel=99
" nnoremap <space> za
let g:SimpylFold_docstring_preview=1
set encoding=utf-8
" make YCM compatible with UltiSnips (using supertab)
" let g:SuperTabDefaultCompletionType = '<C-n>'
" let g:ycm_key_list_select_completion=[]
" let g:ycm_key_list_previous_completion=[]
"
" " better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsSnippetDirectories = ['~/.vim/UltiSnips', 'UltiSnips']
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

let g:user_emmet_leader_key=','
let python_highlight_all=1
