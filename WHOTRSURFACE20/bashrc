# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
# case "$TERM" in
    # xterm-color|*-256color) color_prompt=yes;;
# esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias vi='vim'
alias rec='xmacrorec2 > $HOME/.macros/test.txt'
alias rep='xmacroplay "$DISPLAY" < $HOME/.macros/test.txt'
alias py2int='/usr/local/bin/python3 $HOME/WindowsDocuments/PythonSkripte/convert_pythonscript_to_interpreter.py'

alias c='clear'


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


if command -v tmux>/dev/null; then
 [[ ! $TERM =~ screen ]] && [ -z $TMUX ] && exec tmux
fi

source /usr/share/autojump/autojump.sh

export COLOR_NC=$(echo -e '\033[0m') # No Color
export COLOR_WHITE=$(echo -e '\033[1;37m')
export COLOR_BLACK=$(echo -e '\033[0;30m')
export COLOR_BLUE=$(echo -e '\033[0;34m')
export COLOR_LIGHT_BLUE=$(echo -e '\033[1;34m')
export COLOR_GREEN=$(echo -e '\033[1;32m')
export COLOR_LIGHT_GREEN=$(echo  -e '\033[1;32m')
export COLOR_CYAN=$(echo -e '\033[0;36m')
export COLOR_LIGHT_CYAN=$(echo -e '\033[1;36m')
export COLOR_RED=$(echo -e '\033[0;31m')
export COLOR_LIGHT_RED=$(echo -e '\033[1;31m')
export COLOR_PURPLE=$(echo -e '\033[0;35m')
export COLOR_LIGHT_PURPLE=$(echo -e '\033[1;35m')
export COLOR_BROWN=$(echo -e '\033[0;33m')
export COLOR_YELLOW=$(echo -e '\033[1;33m')
export COLOR_GRAY=$(echo -e '\033[0;30m')
export COLOR_LIGHT_GRAY=$(echo -e '\033[0;37m')

winnum=$(tmux display-message -p | grep -o " [0-9][:]" | grep -o "[0-9]")
panenum=$(tmux display-message -p | grep -o " pane [0-9]" | grep -o "[0-9]")
PS1='$COLOR_GREEN\W $COLOR_BLUE \u@\h $COLOR_LIGHT_GRAY [$(echo $winnum)/$(echo $panenum)] $ $COLOR_BLACK'
PS2='\W \u@\h [$(echo $winnum)/$(echo $panenum)] $ '

SPARK_HOME=$HOME/spark-2.3.0-bin-hadoop2.7/
# HADOOP_HOME=$HOME/hadoop-2.7.6/
HADOOP_HOME=/usr/local/hadoop
export HADOOP_INSTALL=/usr/local/hadoop
export PATH=$SPARK_HOME/bin:$PATH
export PATH=$HADOOP_HOME/bin:$PATH
export PATH=/usr/bin:$PATH

export SPARK_LOCAL_IP=192.168.182.131

# Might need to be changed back for Hadoop
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre
# export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
# export JAVA_HOME="/usr/lib/jvm/java-8-oracle/"
# export JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64/"
# export HADOOP_CONF_DIR="$HADOOP_HOME/conf"
export HADOOP_CONF_DIR=$HADOOP_INSTALL/etc/hadoop
export ZEPPELIN_JAVA_OPTS="-Dhdp.version=2.3.1.0-2574"
###


#HADOOP VARIABLES START
export YARN_CONF_DIR=$HADOOP_INSTALL/etc/hadoop 
export PATH=$PATH:$HADOOP_INSTALL/bin
export PATH=$PATH:$HADOOP_INSTALL/sbin
# export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export HADOOP_OPTS="-Djava.library.path=$HADOOP_INSTALL/lib"
export HADOOP_OPTS="$HADOOP_OPTS -Djava.library.path=$HADOOP_INSTALL/lib/native"
# export HADOOP_OPTS="-Djava.library.path=$HADOOP_COMMON_LIB_NATIVE_DIR"
# export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib"
export JAVA_LIBRARY_PATH=$HADOOP_INSTALL/lib/native
# export LD_LIBRARY_PATH=$HADOOP_HOME/lib/native:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$HADOOP_INSTALL/lib/native:$LD_LIBRARY_PATH
export YARN_EXAMPLES=$HADOOP_INSTALL/share/hadoop/mapreduce
export HADOOP_MAPRED_STOP_TIMEOUT=30
export YARN_STOP_TIMEOUT=30
#HADOOP VARIABLES END


################################################

#PIG VARIABLES
export PIG_HOME=/usr/local/pig
export PATH=$PATH:$PIG_HOME/bin
export PIG_CLASSPATH=$PIG_HOME/conf:$HADOOP_INSTALL/etc/hadoop
#PIG VARIABLES END

#HBASE_VARIABLES
export HBASE_HOME=/usr/local/hbase
export PATH=$PATH:$HBASE_HOME/bin

#HIVE_VARIABLES 
export HIVE_HOME=/usr/local/hive 
export PATH=$PATH:$HIVE_HOME/bin
#HIVE_VARIABLES export HIVE_HOME=/usr/local/hive export PATH=$PATH:$HIVE_HOME/bin
################################################


# -- HADOOP ENVIRONMENT VARIABLES START -- #
# export PATH=$PATH:$HADOOP_HOME/bin
# export PATH=$PATH:$HADOOP_HOME/sbin
# export HADOOP_MAPRED_HOME=$HADOOP_HOME
export HADOOP_MAPRED_HOME=$HADOOP_INSTALL
# export HADOOP_COMMON_HOME=$HADOOP_HOME
export HADOOP_COMMON_HOME=$HADOOP_INSTALL
# export HADOOP_HDFS_HOME=$HADOOP_HOME
export HADOOP_HDFS_HOME=$HADOOP_INSTALL
# export YARN_HOME=$HADOOP_HOME
export YARN_HOME=$HADOOP_INSTALL
# export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_INSTALL/lib/native
# -- HADOOP ENVIRONMENT VARIABLES END -- #

# HIVE
export HIVE_HOME=/usr/local/apache-hive-1.2.2-bin
export HIVE_CONF_DIR=/usr/local/apache-hive-1.2.2-bin/conf
export PATH=$HIVE_HOME/bin:$PATH
export CLASSPATH=$CLASSPATH:/usr/local/hadoop/lib/*:.
export CLASSPATH=$CLASSPATH:/usr/local/apache-hive-1.2.1-bin/lib/*:.

# Derby DB for HIVE and Metastore
export DERBY_HOME=/usr/local/db-derby-10.14.2.0-bin
export PATH=$PATH:$DERBY_HOME/bin
export CLASSPATH=$CLASSPATH:$DERBY_HOME/lib/derby.jar:$DERBY_HOME/lib/derbytools.jar

# Maven
export M2_HOME=/usr/local/apache-maven/apache-maven-3.5.4
export MAVEN_OPTS="-Xms256m -Xmx512m" # Very important to put the "m" on the end

# Set PIG_HOME

export PIG_HOME=/home/bc/pig-0.16.0
export PATH=$PATH:/home/bc/pig-0.16.0/bin
export PIG_CLASSPATH=$HADOOP_CONF_DIR


# Definitions for Hadoop start here
function snotebook () 
{
	#Spark path (based on your computer)
	SPARK_PATH=$HOME/spark-2.3.0-bin-hadoop2.7/

	export PYSPARK_DRIVER_PYTHON="jupyter"
	export PYSPARK_DRIVER_PYTHON_OPTS="notebook"

	# For python 3 users, you have to add the line below or you will get an error 
	export PYSPARK_PYTHON=python3.6

	$SPARK_PATH/bin/pyspark --master local[2]
}
